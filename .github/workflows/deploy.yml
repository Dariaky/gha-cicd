name: Deploy to AWS S3
run-name: Deployment to AWS S3
on:
  push:
    branches:
      - master
      - dev
      - qa

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install dependencies
        run: npm ci
      - name: Test application
        run: npm run test -- --watch=false --browsers=ChromeHeadless

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install dependencies
        run: npm ci
      - name: Build application
        run: npm run build
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: gha-cicd-artifact
          path: dist/gha-cicd/browser

  deploy_dev:
    if: github.ref == 'refs/heads/dev'
    needs: build
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: DEV setup
        uses: ./.github/actions/deploy-to-s3
        with:
          artifact_name: gha-cicd-artifact
          environment_name: dev
          aws_bucket: ${{ secrets.AWS_BUCKET }}
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  deploy_qa:
    if: github.ref == 'refs/heads/qa'
    needs: build
    runs-on: ubuntu-latest
    environment: qa
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: QA setup
        uses: ./.github/actions/deploy-to-s3
        with:
          environment_name: qa
          aws_bucket: ${{ secrets.AWS_BUCKET }}
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  deploy_production:
    if: github.ref == 'refs/heads/master'
    needs: build
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Production setup
        uses: ./.github/actions/deploy-to-s3
        with:
          environment_name: production
          aws_bucket: ${{ secrets.AWS_BUCKET }}
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
